name: Build and Publish Wheels

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  check-ci:
    name: Check CI Status
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    outputs:
      ci-passed: ${{ steps.ci-status.outputs.result }}
    steps:
    - name: Check CI status
      id: ci-status
      uses: actions/github-script@v7
      with:
        script: |
          const { data: checkRuns } = await github.rest.checks.listForRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.sha
          });
          
          const ciRun = checkRuns.check_runs.find(run => run.name.includes('CI'));
          
          if (!ciRun || ciRun.conclusion !== 'success') {
            core.setFailed('CI must pass before building wheels');
            return 'false';
          }
          return 'true';

  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: check-ci
    if: needs.check-ci.outputs.ci-passed == 'true'
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64
          - os: ubuntu-latest  
            target: aarch64
          - os: windows-latest
            target: x64
          - os: macos-latest
            target: x86_64
          - os: macos-14
            target: aarch64

    steps:
    - uses: actions/checkout@v4

    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        args: --release --out dist --find-interpreter
        sccache: 'true'
        manylinux: auto
        working-directory: rapidgeo-py
        
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}-${{ matrix.target }}
        path: dist

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    needs: check-ci
    if: needs.check-ci.outputs.ci-passed == 'true'
    steps:
    - uses: actions/checkout@v4

    - name: Build sdist
      uses: PyO3/maturin-action@v1
      with:
        command: sdist
        args: --out dist
        working-directory: rapidgeo-py

    - name: Upload sdist
      uses: actions/upload-artifact@v4
      with:
        name: wheels-sdist
        path: dist

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [build-wheels, build-sdist]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: wheels-*
        path: dist
        merge-multiple: true

    - name: Publish to PyPI
      uses: PyO3/maturin-action@v1
      env:
        MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      with:
        command: upload
        args: --non-interactive --skip-existing dist/*